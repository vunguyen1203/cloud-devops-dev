cài đặt server

cài đặt gitlab server
curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh | sudo bash
sudo apt-get install gitlab-ee=14.9.1-ee.0
tắt các service chưa cần dùng: alertmanager, gitlab-kas, grafana, node-exporter, prometheus

cài docker script trên server database
#!/bin/bash
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update -y
sudo apt install docker-ce -y
sudo systemctl start docker
sudo systemctl enable docker
sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
docker -v
docker-compose -v

cài sql trên server database
version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server
    container_name: sqlserver
    restart: always
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Str0ngPa5sVvorcl"
    volumes:
      - sqlserver-data:/var/opt/mssql

volumes:
  sqlserver-data:
    driver: local


cài cloudbeaver trên server database
version: '3.8'

services:
  cloudbeaver:
    image: dbeaver/cloudbeaver
    container_name: cloudbeaver
    restart: always
    ports:
      - "8978:8978"
    volumes:
      - cloudbeaver-data:/opt/cloudbeaver/workspace

volumes:
  cloudbeaver-data:
    driver: local

cài đặt NetCore 6:
apt update -y && apt upgrade -y
apt install -y wget apt-transport-https software-properties-common
wget -q https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
dpkg -i packages-microsoft-prod.deb
apt update -y && apt install -y dotnet-sdk-6.0
 
cài đặt NodeJS version 18:
curl -sL https://deb.nodesource.com/setup_18.x -o nodesource_setup.sh
bash nodesource_setup.sh
apt install nodejs

clone dự án về server
tạo user cho dự án và thay đổi chủ và nhóm sở hữu thành user vừa tạo

triển khai fronend với pm2
npm install pm2 -g
pm2 start npm --name onlineshop-frontend -- run "start"

chạy dotnet
dotnet restore
dotnet run

quy trình triển khai dự án
môi trường: dev, pre-production(staging), production 
cách triển khai dự án: service, container standalone(chạy các dự án độc lập = docker), container orchestration(điều phối = k8s)
pp triển khai: build và deploy trên cùng server, build và deploy khác server
3 thành phần pipeline: build, test, deploy
pipeline workflow: commit -> sast -> sca

tại sao cần cicd (gitlabci,jenkins,argo):
tự động hóa công việc
thống nhất quy trình
phát hành nhanh chóng
đảm bảo chất lượng
phản hồi nhanh
phát hiện lỗi
gitlab runner, jenkins agent là các robot thực hiện công việc tự đông dựa trên các file kịch bản(.gitlab-ci.yaml,jenkinsfile)





